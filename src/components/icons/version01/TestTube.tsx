import { FC } from 'react';

const IconTestTube: FC<IconProps> = ({ className, fill = false, duotone = true, width = '1.5' }) => {
  return (
    <>
      {!fill ? (
        <svg className={className} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.74872 2.49439L18.1594 7.32012M9.74872 2.49439L2.65093 14.7457C1.31093 17.0586 2.10615 20.0162 4.42709 21.3516C6.74803 22.6869 9.7158 21.8945 11.0558 19.5815L12.5511 17.0006L14.1886 14.174L15.902 11.2165L18.1594 7.32012M9.74872 2.49439L8.91283 2.00024M18.1594 7.32012L19 7.80399" stroke="currentColor" strokeWidth={width} strokeLinecap="round" /><path opacity={duotone ? "0.5" : "1"} d="M15.9021 11.2167L13.3441 9.74487M14.1887 14.1741L9.98577 11.7559M12.5512 17.0007L9.93848 15.4974" stroke="currentColor" strokeWidth={width} strokeLinecap="round" /><path opacity={duotone ? "0.5" : "1"} d="M22 14.917C22 16.0676 21.1046 17.0003 20 17.0003C18.8954 17.0003 18 16.0676 18 14.917C18 14.1971 18.783 13.2362 19.3691 12.6177C19.7161 12.2516 20.2839 12.2516 20.6309 12.6177C21.217 13.2362 22 14.1971 22 14.917Z" stroke="currentColor" strokeWidth={width} /></svg> 
      ) : duotone ? (
        <svg className={className} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g opacity={duotone ? "0.5" : "1"}><path d="M20 17.0002C21.1046 17.0002 22 16.0674 22 14.9168C22 14.1969 21.217 13.2361 20.6309 12.6176C20.2839 12.2515 19.7161 12.2515 19.3691 12.6176C18.783 13.2361 18 14.1969 18 14.9168C18 16.0674 18.8954 17.0002 20 17.0002Z" fill="currentColor" /><path d="M16.278 10.5677L17.7828 7.97036L9.37268 3.14355L2.65093 14.7458C1.31093 17.0587 2.10615 20.0163 4.42709 21.3517C6.74803 22.687 9.7158 21.8946 11.0558 19.5816L12.1751 17.6497L16.278 10.5677Z" fill="currentColor" /></g><path d="M9.2939 1.35474C8.93733 1.14395 8.47739 1.26213 8.2666 1.61869C8.05581 1.97526 8.17399 2.4352 8.53056 2.64599L9.36645 3.14013L9.37231 3.14357L17.7824 7.97038L18.6261 8.45459C18.9853 8.66077 19.4437 8.53669 19.6499 8.17744C19.8561 7.81819 19.732 7.35981 19.3727 7.15363L10.1256 1.84643L9.2939 1.35474Z" fill="currentColor" /><path d="M12.9271 16.3518L12.9253 16.3507L10.3126 14.8475C9.9536 14.6409 9.49509 14.7645 9.28852 15.1235C9.08195 15.4826 9.20555 15.9411 9.56457 16.1477L12.1752 17.6497L12.9271 16.3518Z" fill="currentColor" /><path d="M14.5647 13.5252L14.5629 13.5242L10.3599 11.106C10.0009 10.8994 9.54239 11.023 9.33582 11.382C9.12925 11.741 9.25284 12.1996 9.61187 12.4061L13.8128 14.8231L14.5647 13.5252Z" fill="currentColor" /><path d="M16.2763 10.5667L13.7183 9.09492C13.3592 8.88835 12.9007 9.01194 12.6941 9.37097C12.4876 9.73 12.6112 10.1885 12.9702 10.3951L15.5262 11.8657L16.2763 10.5667Z" fill="currentColor" /></svg> 
      ) : (
        <svg className={className} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.26697 1.61869C8.47776 1.26213 8.9377 1.14395 9.29427 1.35474L10.126 1.84643L19.3731 7.15363C19.7324 7.35981 19.8564 7.81819 19.6503 8.17744C19.4441 8.53669 18.9857 8.66077 18.6264 8.45459L17.7828 7.97038L16.278 10.5677L16.2762 10.5667L13.7181 9.09491C13.3591 8.88834 12.9006 9.01193 12.694 9.37096C12.4875 9.72999 12.611 10.1885 12.9701 10.3951L15.526 11.8657L14.5646 13.5252L14.5628 13.5242L10.3598 11.106C10.0008 10.8994 9.54227 11.023 9.3357 11.382C9.12913 11.741 9.25272 12.1995 9.61175 12.4061L13.8126 14.8231L12.927 16.3518L12.9252 16.3507L10.3125 14.8475C9.95348 14.6409 9.49497 14.7645 9.2884 15.1235C9.08183 15.4826 9.20542 15.9411 9.56445 16.1476L12.1751 17.6497L11.0558 19.5816C9.7158 21.8946 6.74803 22.687 4.42709 21.3517C2.10615 20.0163 1.31093 17.0588 2.65093 14.7458L9.37268 3.14357L9.36682 3.14013L8.53093 2.64599C8.17436 2.4352 8.05618 1.97526 8.26697 1.61869Z" fill="currentColor" /><path d="M20 17.0002C21.1046 17.0002 22 16.0674 22 14.9168C22 14.1969 21.217 13.2361 20.6309 12.6176C20.2839 12.2515 19.7161 12.2515 19.3691 12.6176C18.783 13.2361 18 14.1969 18 14.9168C18 16.0674 18.8954 17.0002 20 17.0002Z" fill="currentColor" /></svg> 
      )}
    </>
  );
};

// Keywords for search and categorization
(IconTestTube as IconComponent).keywords = [
  "test",
  "tube",
  "try out",
  "examine",
  "trial",
  "experimental",
  "examination",
  "prove",
  "assay",
  "try",
  "quiz",
  "underground",
  "electron tube",
  "vacuum tube",
  "thermionic valve",
  "metro",
  "subway",
  "pipe",
  "thermionic tube",
  "thermionic vacuum tube"
];

export default IconTestTube as IconComponent;