import { FC } from 'react';

const IconMultipleForwardRight: FC<IconProps> = ({ className, fill = false, duotone = true, width = '1.5' }) => {
  return (
    <>
      {!fill ? (
        <svg className={className} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.6644 5.47968L16.6367 9.01061C18.2053 10.4049 18.9896 11.1021 18.9896 12.0002C18.9896 12.8984 18.2053 13.5955 16.6367 14.9899L12.6644 18.5208C11.9484 19.1573 11.5903 19.4755 11.2952 19.3429C11 19.2104 11 18.7314 11 17.7734V15.4288C7.4 15.4288 3.5 17.1431 2 20.0002C2 10.8574 7.33333 8.57167 11 8.57167V6.22709C11 5.26909 11 4.7901 11.2952 4.65754C11.5903 4.52499 11.9484 4.84322 12.6644 5.47968Z" stroke="currentColor" strokeWidth={width} strokeLinecap="round" strokeLinejoin="round" /><path opacity={duotone ? "0.5" : "1"} d="M15.5386 4.50024L20.7548 9.34386C21.5489 10.0813 22.0001 11.116 22.0001 12.1997C22.0001 13.342 21.4989 14.4269 20.629 15.1673L15.5386 19.5002" stroke="currentColor" strokeWidth={width} strokeLinecap="round" /></svg> 
      ) : duotone ? (
        <svg className={className} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.3315 5.1838L17.3094 9.60854C18.2399 10.4357 18.7052 10.8493 18.8767 11.3377C19.0273 11.7666 19.0273 12.2339 18.8767 12.6628C18.7052 13.1512 18.2399 13.5648 17.3094 14.392L12.3315 18.8167C11.9092 19.1921 11.6981 19.3798 11.5187 19.3865C11.3629 19.3923 11.2133 19.3251 11.1142 19.2048C11 19.0663 11 18.7838 11 18.2188V15.4288C8.57196 15.4288 6.00739 16.2087 4.13478 17.593C3.15988 18.3137 2.67242 18.6741 2.48676 18.6599C2.30578 18.646 2.19093 18.5753 2.09703 18.42C2.0007 18.2607 2.08578 17.7628 2.25595 16.767C3.36093 10.3008 7.8109 8.57168 11 8.57168V5.78172C11 5.21671 11 4.9342 11.1142 4.7957C11.2133 4.67537 11.3629 4.60819 11.5187 4.61402C11.6981 4.62073 11.9092 4.80842 12.3315 5.1838Z" fill="currentColor" /><g opacity={duotone ? "0.5" : "1"}><path fillRule="evenodd" clipRule="evenodd" d="M14.989 3.98991C15.2708 3.68638 15.7454 3.6688 16.0489 3.95065L21.2651 8.79427C22.2121 9.67357 22.7501 10.9074 22.7501 12.1997C22.7501 13.5619 22.1524 14.8555 21.1151 15.7384L16.0247 20.0714C15.7093 20.3398 15.236 20.3018 14.9675 19.9864C14.699 19.671 14.737 19.1976 15.0525 18.9291L20.1429 14.5962C20.8454 13.9983 21.2501 13.1222 21.2501 12.1997C21.2501 11.3246 20.8857 10.4889 20.2445 9.89346L15.0283 5.04984C14.7247 4.76799 14.7071 4.29344 14.989 3.98991Z" fill="currentColor" /></g></svg> 
      ) : (
        <svg className={className} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.3315 5.1838L17.3094 9.60854C18.2399 10.4357 18.7052 10.8493 18.8767 11.3377C19.0273 11.7666 19.0273 12.2339 18.8767 12.6628C18.7052 13.1512 18.2399 13.5648 17.3094 14.392L12.3315 18.8167C11.9092 19.1921 11.6981 19.3798 11.5187 19.3865C11.3629 19.3923 11.2133 19.3251 11.1142 19.2048C11 19.0663 11 18.7838 11 18.2188V15.4288C8.57196 15.4288 6.00739 16.2087 4.13478 17.593C3.15988 18.3137 2.67242 18.6741 2.48676 18.6599C2.30578 18.646 2.19093 18.5753 2.09703 18.42C2.0007 18.2607 2.08578 17.7628 2.25595 16.767C3.36093 10.3008 7.8109 8.57168 11 8.57168V5.78172C11 5.21671 11 4.9342 11.1142 4.7957C11.2133 4.67537 11.3629 4.60819 11.5187 4.61402C11.6981 4.62073 11.9092 4.80842 12.3315 5.1838Z" fill="currentColor" /><path fillRule="evenodd" clipRule="evenodd" d="M14.9889 3.98991C15.2708 3.68638 15.7453 3.6688 16.0488 3.95065L21.2651 8.79427C22.212 9.67357 22.75 10.9074 22.75 12.1997C22.75 13.5619 22.1524 14.8555 21.1151 15.7384L16.0246 20.0714C15.7092 20.3398 15.2359 20.3018 14.9674 19.9864C14.6989 19.671 14.737 19.1976 15.0524 18.9291L20.1428 14.5962C20.8453 13.9983 21.25 13.1222 21.25 12.1997C21.25 11.3246 20.8857 10.4889 20.2444 9.89346L15.0282 5.04984C14.7246 4.76799 14.7071 4.29344 14.9889 3.98991Z" fill="currentColor" /></svg> 
      )}
    </>
  );
};

// Keywords for search and categorization
(IconMultipleForwardRight as IconComponent).keywords = [
  "multiple",
  "forward",
  "right",
  "manifold",
  "twofold",
  "duple",
  "dual",
  "double",
  "bigeminal",
  "triune",
  "triple",
  "ternary",
  "frontwards",
  "ahead",
  "frontward",
  "forrader",
  "front",
  "forth",
  "onwards",
  "onward",
  "advancing",
  "straight",
  "precise",
  "right on",
  "accurate",
  "decently",
  "satisfactory",
  "exact",
  "powerful",
  "opportune"
];

export default IconMultipleForwardRight as IconComponent;