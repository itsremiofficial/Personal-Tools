{"version":3,"file":"useClipboard-BqkZ32rW.js","sources":["../../node_modules/@radix-ui/primitive/dist/index.mjs","../../node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs","../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs","../../node_modules/@radix-ui/react-toggle/dist/index.mjs","../../src/utils/copyToClipboard.ts","../../src/hooks/useClipboard.ts"],"sourcesContent":["// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nexport {\n  composeEventHandlers\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-callback-ref/src/useCallbackRef.tsx\nimport * as React from \"react\";\nfunction useCallbackRef(callback) {\n  const callbackRef = React.useRef(callback);\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return React.useMemo(() => (...args) => callbackRef.current?.(...args), []);\n}\nexport {\n  useCallbackRef\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-controllable-state/src/useControllableState.tsx\nimport * as React from \"react\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nfunction useControllableState({\n  prop,\n  defaultProp,\n  onChange = () => {\n  }\n}) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== void 0;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n  const setValue = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue;\n        const value2 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\n        if (value2 !== prop) handleChange(value2);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n  return [value, setValue];\n}\nfunction useUncontrolledState({\n  defaultProp,\n  onChange\n}) {\n  const uncontrolledState = React.useState(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n  return uncontrolledState;\n}\nexport {\n  useControllableState\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/toggle/src/Toggle.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Toggle\";\nvar Toggle = React.forwardRef((props, forwardedRef) => {\n  const { pressed: pressedProp, defaultPressed = false, onPressedChange, ...buttonProps } = props;\n  const [pressed = false, setPressed] = useControllableState({\n    prop: pressedProp,\n    onChange: onPressedChange,\n    defaultProp: defaultPressed\n  });\n  return /* @__PURE__ */ jsx(\n    Primitive.button,\n    {\n      type: \"button\",\n      \"aria-pressed\": pressed,\n      \"data-state\": pressed ? \"on\" : \"off\",\n      \"data-disabled\": props.disabled ? \"\" : void 0,\n      ...buttonProps,\n      ref: forwardedRef,\n      onClick: composeEventHandlers(props.onClick, () => {\n        if (!props.disabled) {\n          setPressed(!pressed);\n        }\n      })\n    }\n  );\n});\nToggle.displayName = NAME;\nvar Root = Toggle;\nexport {\n  Root,\n  Toggle\n};\n//# sourceMappingURL=index.mjs.map\n","import { toast } from \"sonner\";\n\n/**\n * Enhanced copy to clipboard with visual feedback and error handling\n * This version doesn't use React hooks, making it safe to use anywhere\n */\nexport function copyToClipboard(\n  text: string,\n  label: string = \"Text\",\n  options?: {\n    successMessage?: string;\n    errorMessage?: string;\n    onSuccess?: () => void;\n    onError?: (error: unknown) => void;\n  }\n): Promise<boolean> {\n  const defaultOptions = {\n    successMessage: `${label} copied to clipboard`,\n    errorMessage: \"Failed to copy to clipboard\",\n    onSuccess: () => {},\n    onError: (error: unknown) => console.error(\"Copy error:\", error),\n  };\n\n  const opts = { ...defaultOptions, ...options };\n\n  // Determine which clipboard API to use based on environment and availability\n  // This provides better compatibility across different browsers and platforms\n  let copyPromise: Promise<void>;\n\n  // Use the most modern API available\n  if (\n    navigator.clipboard &&\n    typeof navigator.clipboard.writeText === \"function\"\n  ) {\n    copyPromise = navigator.clipboard.writeText(text);\n  } else {\n    // Fallback for older browsers\n    copyPromise = new Promise((resolve, reject) => {\n      try {\n        // Create temporary element\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n\n        // Make it invisible but part of the document\n        textArea.style.position = \"fixed\";\n        textArea.style.opacity = \"0\";\n        document.body.appendChild(textArea);\n\n        // Select and copy\n        textArea.select();\n        const success = document.execCommand(\"copy\");\n        document.body.removeChild(textArea);\n\n        if (success) {\n          resolve();\n        } else {\n          reject(new Error(\"execCommand returned false\"));\n        }\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  // Handle the copy operation and provide feedback\n  return copyPromise\n    .then(() => {\n      toast.success(opts.successMessage, {\n        description:\n          text.length <= 0\n            ? text.length > 40\n              ? `${text.substring(0, 37)}...`\n              : text\n            : \"\",\n        duration: 2000,\n      });\n      opts.onSuccess();\n      return true;\n    })\n    .catch((error) => {\n      toast.error(opts.errorMessage, {\n        description: \"Please try manually selecting and copying the text.\",\n        duration: 3000,\n      });\n      opts.onError(error);\n      return false;\n    });\n}\n","import { useState, useCallback } from \"react\";\nimport { copyToClipboard as copyUtil } from \"@/utils/copyToClipboard\";\nimport { toast } from \"sonner\";\n\ninterface UseClipboardOptions {\n  timeout?: number;\n  onSuccess?: (text: string, label: string) => void;\n  onError?: (error: unknown) => void;\n}\n\n/**\n * A React hook that provides clipboard functionality with visual feedback\n */\nexport function useClipboard(options: UseClipboardOptions = {}) {\n  const { timeout = 2000, onSuccess, onError } = options;\n  const [copied, setCopied] = useState<string | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const copyToClipboard = useCallback(\n    async (text: string, label: string = \"Text\", desc = false) => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const success = await copyUtil(text, label, {\n          onSuccess: () => {\n            if (onSuccess) onSuccess(text, label);\n          },\n          onError: (err) => {\n            if (onError) onError(err);\n            setError(err instanceof Error ? err : new Error(\"Failed to copy\"));\n          },\n        });\n\n        if (success) {\n          setCopied(label);\n          if (timeout) {\n            setTimeout(() => setCopied(null), timeout);\n          }\n        }\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error(\"Failed to copy\"));\n        if (onError) onError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [timeout, onSuccess, onError, toast]\n  );\n\n  const reset = useCallback(() => {\n    setCopied(null);\n    setError(null);\n  }, []);\n\n  return {\n    copied,\n    error,\n    isLoading,\n    copyToClipboard,\n    reset,\n  };\n}\n"],"names":["composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","useCallbackRef","callback","callbackRef","React.useRef","React.useEffect","React.useMemo","args","_a","useControllableState","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","useUncontrolledState","isControlled","value","handleChange","setValue","React.useCallback","nextValue","value2","uncontrolledState","React.useState","prevValueRef","NAME","Toggle","React.forwardRef","props","forwardedRef","pressedProp","defaultPressed","onPressedChange","buttonProps","pressed","setPressed","jsx","Primitive","Root","copyToClipboard","text","label","options","opts","error","copyPromise","resolve","reject","textArea","success","err","toast","useClipboard","timeout","onSuccess","onError","copied","setCopied","useState","setError","isLoading","setIsLoading","useCallback","desc","copyUtil","reset"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}