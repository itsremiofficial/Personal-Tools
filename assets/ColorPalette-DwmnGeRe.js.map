{"version":3,"file":"ColorPalette-DwmnGeRe.js","sources":["../../src/hooks/colorUtils.ts","../../src/hooks/colorVarientsGenerator.ts","../../src/components/Colors.tsx","../../src/Pages/ColorPalette.tsx"],"sourcesContent":["// Color space conversion utilities\nconst sRGBToLinear = (value: number): number => {\n  const v = value / 255;\n  return v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n};\n\nconst linearToOKLab = (\n  r: number,\n  g: number,\n  b: number\n): [number, number, number] => {\n  const l = 0.4122214708 * r + 0.5363325363 * g + 0.0514459929 * b;\n  const m = 0.2119034982 * r + 0.6806995451 * g + 0.1073969566 * b;\n  const s = 0.0883024619 * r + 0.2817188376 * g + 0.6299787005 * b;\n\n  const l_ = Math.cbrt(l);\n  const m_ = Math.cbrt(m);\n  const s_ = Math.cbrt(s);\n\n  return [\n    0.2104542553 * l_ + 0.793617785 * m_ - 0.0040720468 * s_,\n    1.9779984951 * l_ - 2.428592205 * m_ + 0.4505937099 * s_,\n    0.0259040371 * l_ + 0.7827717662 * m_ - 0.808675766 * s_,\n  ];\n};\n\n// Add new conversion functions\nconst sRGBtoLinearRGB = (color: number): number => {\n  const c = color / 255;\n  return c <= 0.04045 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n};\n\nconst linearRGBtoOKLAB = (\n  r: number,\n  g: number,\n  b: number\n): [number, number, number] => {\n  const l = 0.4122214708 * r + 0.5363325363 * g + 0.0514459929 * b;\n  const m = 0.2119034982 * r + 0.6806995451 * g + 0.1073969566 * b;\n  const s = 0.0883024619 * r + 0.2817188376 * g + 0.6299787005 * b;\n\n  const l_ = Math.cbrt(l);\n  const m_ = Math.cbrt(m);\n  const s_ = Math.cbrt(s);\n\n  const L = 0.2104542553 * l_ + 0.793617785 * m_ - 0.0040720468 * s_;\n  const a = 1.9779984951 * l_ - 2.428592205 * m_ + 0.4505937099 * s_;\n  const b_ = 0.0259040371 * l_ + 0.7827717662 * m_ - 0.808675766 * s_;\n\n  return [L, a, b_];\n};\n\nconst OKLABtoOKLCH = (\n  L: number,\n  a: number,\n  b: number\n): [number, number, number] => {\n  const C = Math.sqrt(a * a + b * b);\n  let h = (Math.atan2(b, a) * 180) / Math.PI;\n  if (h < 0) h += 360;\n  return [L, C, h];\n};\n\nexport const hexToRgb = (hex: string): [number, number, number] | null => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null;\n};\n\nexport const rgbToHex = (r: number, g: number, b: number): string =>\n  `#${[r, g, b].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\")}`;\n\nexport const rgbToString = (r: number, g: number, b: number): string =>\n  `rgb(${r}, ${g}, ${b})`;\n\nexport const hexToOklch = (hex: string): string => {\n  const rgb = hexToRgb(hex);\n  if (!rgb) return \"\";\n\n  // Convert to linear RGB\n  const [r, g, b] = rgb.map(sRGBtoLinearRGB);\n\n  // Convert to OKLAB\n  const [L, a, b_] = linearRGBtoOKLAB(r, g, b);\n\n  // Convert to OKLCH\n  const [okL, okC, okH] = OKLABtoOKLCH(L, a, b_);\n\n  // Scale values\n  const scaledL = okL * 100;\n  const scaledC = okC;\n\n  return `oklch(${scaledL.toFixed(3)}% ${scaledC.toFixed(3)} ${okH.toFixed(\n    3\n  )})`;\n};\n\nexport const adjustOklch = (\n  hex: string,\n  target: \"light\" | \"dark\",\n  percentage: number\n): string => {\n  const rgb = hexToRgb(hex);\n  if (!rgb) return hex;\n\n  const [r, g, b] = rgb.map(sRGBtoLinearRGB);\n  const [L, a, b_] = linearRGBtoOKLAB(r, g, b);\n  const [okL, okC, okH] = OKLABtoOKLCH(L, a, b_);\n\n  // Calculate base values\n  const baseLightness = okL * 100;\n  const baseChroma = okC;\n\n  // Define fixed ranges for consistent scaling\n  const maxLightness = 99.5;\n  const minLightness = 0.5;\n  const range = maxLightness - minLightness;\n\n  let newL: number;\n  let newC: number;\n\n  if (target === \"light\") {\n    // Create even distribution from base to white\n    const availableRange = maxLightness - baseLightness;\n    newL = baseLightness + (availableRange * percentage);\n    \n    // Smoothly reduce chroma as it gets lighter\n    const chromaFactor = Math.cos((percentage * Math.PI) / 2);\n    newC = baseChroma * chromaFactor;\n  } else {\n    // Create even distribution from base to black\n    const availableRange = baseLightness - minLightness;\n    newL = baseLightness - (availableRange * percentage);\n    \n    // Maintain more chroma in darker shades\n    const chromaFactor = Math.cos((percentage * Math.PI) / 2.5);\n    newC = baseChroma * chromaFactor;\n  }\n\n  // Ensure values stay within bounds\n  newL = Math.max(minLightness, Math.min(maxLightness, newL));\n  newC = Math.max(baseChroma * 0.1, newC); // Maintain minimum chroma\n\n  return `oklch(${newL.toFixed(3)}% ${newC.toFixed(3)} ${okH.toFixed(3)})`;\n};\n\nexport const adjustRGB = (\n  r: number,\n  g: number,\n  b: number,\n  target: \"light\" | \"dark\",\n  percentage: number\n): [number, number, number] => {\n  if (target === \"light\") {\n    return [\n      Math.round(r + (255 - r) * percentage),\n      Math.round(g + (255 - g) * percentage),\n      Math.round(b + (255 - b) * percentage),\n    ];\n  }\n  return [\n    Math.round(r * (1 - percentage)),\n    Math.round(g * (1 - percentage)),\n    Math.round(b * (1 - percentage)),\n  ];\n};\n","import {\n  hexToRgb,\n  rgbToHex,\n  rgbToString,\n  hexToOklch,\n  adjustRGB,\n  adjustOklch,\n} from \"./colorUtils\";\n\nexport const generateColorVariants = (\n  color: string,\n  colorName: string\n): ColorVariant[] => {\n  const rgb = hexToRgb(color);\n  if (!rgb) return [];\n  const [r, g, b] = rgb;\n\n  const variants: ColorVariant[] = [];\n\n  // Generate lighter variants\n  const lightVariantSteps = [100, 200, 300, 400, 500, 600, 700, 800];\n  lightVariantSteps.forEach((step, index) => {\n    const percentage =\n      (lightVariantSteps.length - index) / lightVariantSteps.length;\n    const [adjustedR, adjustedG, adjustedB] = adjustRGB(\n      r,\n      g,\n      b,\n      \"light\",\n      percentage\n    );\n    const hexValue = rgbToHex(adjustedR, adjustedG, adjustedB);\n    variants.push({\n      value: hexValue,\n      label: `--${colorName}-${step}`,\n      hex: hexValue,\n      rgb: rgbToString(adjustedR, adjustedG, adjustedB),\n      oklch: adjustOklch(hexValue, \"light\", percentage),\n    });\n  });\n\n  // Add base color variant without number\n  variants.push({\n    value: color,\n    label: `--${colorName}-800`,\n    hex: color,\n    rgb: rgbToString(r, g, b),\n    oklch: hexToOklch(color),\n  });\n\n  // Generate darker variants\n  const darkVariantSteps = [900, 1000, 1100, 1200, 1300, 1400];\n  darkVariantSteps.forEach((step, index) => {\n    const percentage = (index + 1) / darkVariantSteps.length;\n    const [adjustedR, adjustedG, adjustedB] = adjustRGB(\n      r,\n      g,\n      b,\n      \"dark\",\n      percentage\n    );\n    const hexValue = rgbToHex(adjustedR, adjustedG, adjustedB);\n    variants.push({\n      value: hexValue,\n      label: `--${colorName}-${step}`,\n      hex: hexValue,\n      rgb: rgbToString(adjustedR, adjustedG, adjustedB),\n      oklch: adjustOklch(hexValue, \"dark\", percentage),\n    });\n  });\n\n  return variants;\n};\n","import { cn } from \"@/hooks\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { generateColorVariants } from \"@/hooks/colorVarientsGenerator\";\nimport { Button } from \"./common/Button\";\nimport { Card, CardBody } from \"./common/Card\";\nimport { IconCopy, IconTickCircle } from \"./icons/version02\";\nimport { IconCheck } from \"./icons/version01\";\n\nexport const ColorCodeBlock: React.FC<ColorCodeBlockProps> = ({\n  variants,\n  colorName,\n  className,\n  variableName,\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const formattedVariables = useMemo(() => {\n    return variants\n      .map((variant, index) => {\n        const colorSuffix = (index + 1) * 100; // For example: 100, 200, 300, etc.\n        return `--${variableName}${index + 1}: var(--${colorName\n          .toLowerCase()\n          .replace(/\\s+/g, \"-\")}-${colorSuffix});`;\n      })\n      .join(\"\\n\");\n  }, [variants, colorName]);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(formattedVariables);\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 2000);\n  };\n  const threecircle = variants[9].hex;\n  const lines = formattedVariables.split(\"\\n\");\n  const codeBlock = lines\n    .map((line, i) => {\n      const variant = variants[i];\n      return `<pre><span style=\"background-color: ${variant.hex};\"></span><code>${line}</code></pre>`;\n    })\n    .join(\"\");\n\n  return (\n    <div className={`mockup-code relative w-full ${className}`}>\n      <div className=\"relative flex gap-2 px-5 pb-6\">\n        {Array(3)\n          .fill(null)\n          .map((_, index) => (\n            <span\n              key={index}\n              className=\"size-3 rounded-full\"\n              style={{ backgroundColor: threecircle }}\n            ></span>\n          ))}\n      </div>\n\n      <div\n        dangerouslySetInnerHTML={{ __html: codeBlock }}\n        className=\"pr-16 pt-5\"\n      />\n\n      <button\n        onClick={handleCopy}\n        className={cn(\n          \"absolute top-3 right-3 px-3 py-1.5 rounded-xl text-sm flex items-center gap-2 font-medium transition-colors uppercase text-[12px] cursor-pointer\",\n          \"bg-icu-300 hover:bg-icu-400/70 text-icu-700 hover:text-icu-900\",\n          \"dark:bg-icu-800/50 dark:hover:bg-icu-800 dark:text-icu-600 dark:hover:text-icu-400\"\n        )}\n      >\n        {isCopied ? (\n          <>\n            Copied <IconTickCircle className=\"size-4\" />\n          </>\n        ) : (\n          <>\n            Copy <IconCopy className=\"size-4\" />\n          </>\n        )}\n      </button>\n    </div>\n  );\n};\n\ninterface ColorDotProps {\n  color: string;\n}\n\nexport const ColorDot: React.FC<ColorDotProps> = ({ color }) => (\n  <div\n    className=\"w-8 h-8 rounded-full mr-2\"\n    style={{ backgroundColor: color }}\n  />\n);\n\nexport const ColorFormatSelector: React.FC<ColorFormatSelectorProps> = ({\n  selectedFormat,\n  onChange,\n}) => {\n  const formats: {\n    value: ColorFormat;\n    label: string;\n    notification?: number;\n  }[] = [\n    { value: \"hex\", label: \"HEX\" },\n    { value: \"rgb\", label: \"RGB\" },\n    { value: \"oklch\", label: \"OKLCH\" },\n  ];\n\n  return (\n    <div className=\"container\">\n      <div className=\"tabs flex relative justify-center gap-4\">\n        {formats.map(({ value, label }, index) => (\n          <React.Fragment key={value}>\n            <input\n              type=\"radio\"\n              id={`radio-${value}`}\n              name=\"tabs\"\n              checked={selectedFormat === value}\n              onChange={() => onChange(value)}\n              className=\"hidden peer\"\n            />\n            <label\n              htmlFor={`radio-${value}`}\n              id={\"radio-\" + (index + 1)}\n              className={`px-10 py-2 select-none rounded-xl cursor-pointer flex grow justify-center font-medium relative !transition-color !duration-300 ${\n                selectedFormat === value\n                  ? \"!bg-accent !text-icu-100 dark:!bg-icu-800 dark:!text-icu-400\"\n                  : \"\"\n              } \n              bg-icu-200 hover:bg-accent text-icu-800 hover:text-icu-100\n              dark:bg-icu-800/50 dark:hover:bg-icu-800 dark:text-icu-700 dark:hover:text-icu-400\n              `}\n            >\n              {label}\n              <IconCheck\n                duotone={false}\n                className={`absolute top-1/2 right-2 transform -translate-y-1/2 !transition-opacity !duration-500\n                  bg-blue-700/40 text-icu-100 dark:bg-icu-600/40 dark:text-icu-200\n                  rounded-full p-0.5 size-6 opacity-0 ${\n                    selectedFormat === value ? \"opacity-100\" : \"\"\n                  }`}\n              />\n            </label>\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\ninterface ColorVariantButtonProps {\n  variant: ColorVariant;\n  isCopied: boolean;\n  onClick: () => void;\n  displayValue: string;\n}\n\nexport const ColorVariantButton: React.FC<ColorVariantButtonProps> = ({\n  variant,\n  isCopied,\n  onClick,\n  displayValue,\n}) => {\n  return (\n    <button\n      onClick={onClick}\n      className={cn(\n        \"flex items-center cursor-pointer py-3 pl-3 pr-12 transition-colors duration-300 rounded-xl w-full relative text-secondary group \",\n        \"bg-icu-200 hover:bg-icu-300\",\n        \"text-icu-800 hover:text-icu-1000\",\n        \"dark:bg-icu-900 dark:hover:bg-icu-800/60\",\n        \"dark:text-icu-500 dark:hover:text-icu-400\"\n      )}\n    >\n      <ColorDot color={variant.hex} />\n      <div className=\"flex flex-col items-start\">\n        <span className=\"whitespace-nowrap text-sm font-medium\">\n          {variant.label.toLowerCase().replace(/\\s+/g, \"-\")}\n        </span>\n        <IconCopy className=\"absolute top-1/2 right-2 transform -translate-y-1/2 text-icu-500 group-hover:text-icu-700 dark:text-icu-800 dark:group-hover:text-icu-600 size-5 transition-colors duration-300\" />\n        <span className=\" transition-colors duration-300 text-xs text-icu-500 group-hover:text-icu-700 dark:text-icu-700/60 group-hover:dark:text-icu-600 font-mono whitespace-nowrap\">\n          {displayValue}\n        </span>\n      </div>\n      <CopyNotification show={isCopied} />\n    </button>\n  );\n};\n\nconst ColorVariants: React.FC<ColorVariantsProps> = ({\n  baseColor: initBaseColor,\n  colorName: initColorName,\n}) => {\n  const [baseColor, setBaseColor] = useState<string>(initBaseColor);\n  const [colorName, setColorName] = useState<string>(initColorName);\n  const [variableName, setVariableName] = useState<string>(\"color\");\n  const [copiedColors, setCopiedColors] = useState<Set<string>>(new Set());\n  const [colorFormat, setColorFormat] = useState<ColorFormat>(\"hex\");\n\n  const [debouncedBaseColor, setDebouncedBaseColor] =\n    useState<string>(baseColor);\n  const [debouncedColorName, setDebouncedColorName] =\n    useState<string>(colorName);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (/^#[0-9A-F]{6}$/i.test(debouncedBaseColor)) {\n        setBaseColor(debouncedBaseColor);\n      }\n    }, 300);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [debouncedBaseColor]);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (debouncedColorName.trim()) {\n        setColorName(debouncedColorName);\n      }\n    }, 300);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [debouncedColorName]);\n\n  const colorVariants = useMemo(\n    () => generateColorVariants(baseColor, colorName),\n    [baseColor, colorName]\n  );\n\n  const getColorValue = useCallback(\n    (variant: ColorVariant) => {\n      switch (colorFormat) {\n        case \"rgb\":\n          return variant.rgb;\n        case \"oklch\":\n          return variant.oklch;\n        default:\n          return variant.hex;\n      }\n    },\n    [colorFormat]\n  );\n\n  const handleSingleCopy = useCallback(\n    (variant: ColorVariant) => {\n      const colorValue = getColorValue(variant);\n      navigator.clipboard.writeText(\n        `${variant.label.toLowerCase().replace(/\\s+/g, \"-\")}: ${colorValue};`\n      );\n      setCopiedColors(new Set([variant.value]));\n      setTimeout(() => setCopiedColors(new Set()), 3000);\n    },\n    [getColorValue]\n  );\n\n  const handleCopyAll = useCallback(() => {\n    const allColors = colorVariants.map((variant) => variant.value);\n    const colorString = colorVariants\n      .map(\n        (variant) =>\n          `${variant.label.toLowerCase().replace(/\\s+/g, \"-\")}: ${getColorValue(\n            variant\n          )};`\n      )\n      .join(\"\\n\");\n\n    navigator.clipboard.writeText(colorString);\n    setCopiedColors(new Set(allColors));\n    setTimeout(() => setCopiedColors(new Set()), 3000);\n  }, [colorVariants, getColorValue]);\n\n  const handleColorChange = useCallback((color: { hex: string }) => {\n    setBaseColor(color.hex);\n  }, []);\n\n  return (\n    <Card\n      className={cn(\n        \"w-fit flex p-5 gap-4 flex-wrap lg:flex-nowrap lg:justify-center\",\n        \"p-4 grow max-h-screen overflow-y-auto backdrop-blur-3xl\",\n        \"border-icu-300 bg-icu-100/60 \",\n        \"dark:border-icu-800/70 dark:bg-icu-1000/60\"\n      )}\n    >\n      <CardBody\n        className={cn(\"p-6 w-full rounded-3xl border flex flex-col gap-4\")}\n      >\n        <div className=\"flex gap-4 w-full flex-col\">\n          <label className=\"space-y-4 flex flex-col justify-center w-full\">\n            <div className=\"flex gap-2 items-center justify-center relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Colors hex code\"\n                value={debouncedBaseColor}\n                onChange={(e) => setDebouncedBaseColor(e.target.value)}\n                className={cn(\n                  \"shrink rounded-xl !p-3 border-[1.5px] w-max !ring-0 !outline-0 transition-colors duration-300\",\n                  \"bg-icu-200 border-icu-400/70 text-icu-800\",\n                  \"focus-visible:border-icu-600\",\n                  \"dark:bg-icu-900 dark:border-icu-800/70 dark:text-icu-400\",\n                  \"dark:focus-visible:border-icu-700/70\"\n                )}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Color Name eg: red or yellow\"\n                value={debouncedColorName}\n                onChange={(e) => setDebouncedColorName(e.target.value)}\n                className={cn(\n                  \"grow rounded-xl !p-3 border-[1.5px] w-max !ring-0 !outline-0 transition-colors duration-300\",\n                  \"bg-icu-200 border-icu-400/70 text-icu-800\",\n                  \"focus-visible:border-icu-600\",\n                  \"dark:bg-icu-900 dark:border-icu-800/70 dark:text-icu-400\",\n                  \"dark:focus-visible:border-icu-700/70\"\n                )}\n              />\n            </div>\n          </label>\n          <ColorFormatSelector\n            selectedFormat={colorFormat}\n            onChange={setColorFormat}\n          />\n        </div>\n\n        {colorVariants.length > 8 && (\n          <ul className=\"flex flex-col gap-2 py-2\">\n            <label\n              htmlFor=\"Given Color\"\n              className=\"text-icu-900 dark:text-icu-500\"\n            >\n              Given Color\n            </label>\n            <li key=\"9\">\n              <ColorVariantButton\n                variant={colorVariants[8]}\n                isCopied={copiedColors.has(colorVariants[8].value)}\n                onClick={() => handleSingleCopy(colorVariants[8])}\n                displayValue={getColorValue(colorVariants[8])}\n              />\n            </li>\n          </ul>\n        )}\n\n        <div className=\"flex flex-col gap-2 py-2\">\n          <label\n            htmlFor=\"Color Variants\"\n            className=\"text-icu-900 dark:text-icu-500\"\n          >\n            Color Variants\n          </label>\n          <div className=\"flex gap-4\">\n            <ul className=\"grow space-y-2\">\n              {colorVariants.slice(0, 7).map((variant, index) => (\n                <li key={index}>\n                  <ColorVariantButton\n                    variant={variant}\n                    isCopied={copiedColors.has(variant.value)}\n                    onClick={() => handleSingleCopy(variant)}\n                    displayValue={getColorValue(variant)}\n                  />\n                </li>\n              ))}\n            </ul>\n\n            <ul className=\"grow space-y-2\">\n              {colorVariants.slice(8, 15).map((variant, index) => (\n                <li key={index + 10}>\n                  <ColorVariantButton\n                    variant={variant}\n                    isCopied={copiedColors.has(variant.value)}\n                    onClick={() => handleSingleCopy(variant)}\n                    displayValue={getColorValue(variant)}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <Button onClick={handleCopyAll} size={\"lg\"} className=\"flex gap-2\">\n          Copy All <IconCopy className=\"size-5\" />\n        </Button>\n      </CardBody>\n      <CardBody className={cn(\"w-full h-full p-6 rounded-3xl\")}>\n        <input\n          type=\"text\"\n          placeholder=\"Change Variable Name eg: color or primary\"\n          value={variableName}\n          onChange={(e) => setVariableName(e.target.value)}\n          className={cn(\n            \"grow rounded-xl !p-3 border-[1.5px] w-full mb-4 !ring-0 !outline-0 transition-colors duration-300\",\n            \"bg-icu-200 border-icu-400/70 text-icu-800\",\n            \"focus-visible:border-icu-600\",\n            \"dark:bg-icu-900 dark:border-icu-800/70 dark:text-icu-400\",\n            \"dark:focus-visible:border-icu-700/70\"\n          )}\n        />\n        <ColorCodeBlock\n          variants={colorVariants}\n          colorFormat={colorFormat}\n          colorName={colorName}\n          className={`lg:min-w-max lg:w-full`}\n          variableName={variableName}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ColorVariants;\n\ninterface CopyNotificationProps {\n  show: boolean;\n}\n\nexport const CopyNotification: React.FC<CopyNotificationProps> = ({ show }) => {\n  if (!show) return null;\n\n  return (\n    <span\n      className={cn(\n        \"absolute text-[9px] leading-none tracking-widest uppercase font-bold py-1 px-2 right-2 flex w-max rounded-full items-center gap-1 backdrop-blur-2xl\",\n        \"bg-emerald-50 text-emerald-600 dark:text-emerald-500 dark:bg-icu-1000/40\"\n      )}\n    >\n      Copied <IconTickCircle className=\"size-3 stroke-3\" />\n    </span>\n  );\n};\n","import { ColorVariants } from \"@/components\";\nimport React, { useState } from \"react\";\n\nconst ColorPalette = () => {\n  const [colorVariantCount, setColorVariantCount] = useState(1);\n  return (\n    <div className=\"flex justify-center w-full gap-4 flex-wrap p-2\">\n      {Array.from({ length: colorVariantCount }).map((_, index) => (\n        <ColorVariants key={index} baseColor=\"#A52502\" colorName=\"red\" />\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPalette;\n"],"names":["sRGBtoLinearRGB","color","c","linearRGBtoOKLAB","r","g","b","l","m","s","l_","m_","s_","L","a","b_","OKLABtoOKLCH","C","h","hexToRgb","hex","result","rgbToHex","x","rgbToString","hexToOklch","rgb","okL","okC","okH","scaledL","scaledC","adjustOklch","target","percentage","baseLightness","baseChroma","maxLightness","minLightness","newL","newC","availableRange","chromaFactor","adjustRGB","generateColorVariants","colorName","variants","lightVariantSteps","step","index","adjustedR","adjustedG","adjustedB","hexValue","darkVariantSteps","ColorCodeBlock","className","variableName","isCopied","setIsCopied","useState","formattedVariables","useMemo","variant","colorSuffix","handleCopy","threecircle","codeBlock","line","i","jsxs","jsx","_","cn","Fragment","IconTickCircle","IconCopy","ColorDot","ColorFormatSelector","selectedFormat","onChange","formats","value","label","React","IconCheck","ColorVariantButton","onClick","displayValue","CopyNotification","ColorVariants","initBaseColor","initColorName","baseColor","setBaseColor","setColorName","setVariableName","copiedColors","setCopiedColors","colorFormat","setColorFormat","debouncedBaseColor","setDebouncedBaseColor","debouncedColorName","setDebouncedColorName","useEffect","handler","colorVariants","getColorValue","useCallback","handleSingleCopy","colorValue","handleCopyAll","allColors","colorString","Card","CardBody","e","Button","show","ColorPalette","colorVariantCount","setColorVariantCount"],"mappings":"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"}